{"ast":null,"code":"export default {\n  data() {\n    return {\n      isRunning: false,\n      startTime: null,\n      elapsedTime: 0\n    };\n  },\n  computed: {\n    formatTime() {\n      const milliseconds = this.elapsedTime % 1000;\n      const seconds = Math.floor(this.elapsedTime / 1000) % 60;\n      const minutes = Math.floor(this.elapsedTime / 60000) % 60;\n      const hours = Math.floor(this.elapsedTime / 3600000);\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}:${milliseconds.toString().padStart(3, '0')}`;\n    }\n  },\n  methods: {\n    startStopwatch() {\n      if (!this.isRunning) {\n        this.isRunning = true;\n        this.startTime = Date.now();\n        this.timerInterval = setInterval(() => {\n          this.elapsedTime = Date.now() - this.startTime;\n        }, 10);\n      }\n    },\n    stopStopwatch() {\n      if (this.isRunning) {\n        this.isRunning = false;\n        clearInterval(this.timerInterval);\n      }\n    },\n    resetStopwatch() {\n      this.isRunning = false;\n      clearInterval(this.timerInterval);\n      this.elapsedTime = 0;\n    }\n  }\n};","map":{"version":3,"names":["data","isRunning","startTime","elapsedTime","computed","formatTime","milliseconds","seconds","Math","floor","minutes","hours","toString","padStart","methods","startStopwatch","Date","now","timerInterval","setInterval","stopStopwatch","clearInterval","resetStopwatch"],"sources":["C:\\Users\\MSI CORE i3\\widgetfoto\\src\\components\\StopwatchWidget.vue"],"sourcesContent":["<template>\r\n    <div class=\"stopwatch-widget\">\r\n      <h2>Stopwatch</h2>\r\n      <p>{{ formatTime }}</p>\r\n      <div>\r\n        <button @click=\"startStopwatch\" :disabled=\"isRunning\">Start</button>\r\n        <button @click=\"stopStopwatch\" :disabled=\"!isRunning\">Stop</button>\r\n        <button @click=\"resetStopwatch\">Reset</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        isRunning: false,\r\n        startTime: null,\r\n        elapsedTime: 0,\r\n      };\r\n    },\r\n    computed: {\r\n      formatTime() {\r\n        const milliseconds = this.elapsedTime % 1000;\r\n        const seconds = Math.floor(this.elapsedTime / 1000) % 60;\r\n        const minutes = Math.floor(this.elapsedTime / 60000) % 60;\r\n        const hours = Math.floor(this.elapsedTime / 3600000);\r\n  \r\n        return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}:${milliseconds.toString().padStart(3, '0')}`;\r\n      },\r\n    },\r\n    methods: {\r\n      startStopwatch() {\r\n        if (!this.isRunning) {\r\n          this.isRunning = true;\r\n          this.startTime = Date.now();\r\n  \r\n          this.timerInterval = setInterval(() => {\r\n            this.elapsedTime = Date.now() - this.startTime;\r\n          }, 10);\r\n        }\r\n      },\r\n      stopStopwatch() {\r\n        if (this.isRunning) {\r\n          this.isRunning = false;\r\n          clearInterval(this.timerInterval);\r\n        }\r\n      },\r\n      resetStopwatch() {\r\n        this.isRunning = false;\r\n        clearInterval(this.timerInterval);\r\n        this.elapsedTime = 0;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .stopwatch-widget {\r\n    background-color: aqua;\r\n    border: 1px solid #ccc;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .stopwatch-widget h2 {\r\n    color: #333;\r\n    font-size: 24px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .stopwatch-widget p {\r\n    color: #666;\r\n    font-size: 18px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .stopwatch-widget button {\r\n    padding: 10px 20px;\r\n    background-color: #4caf50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .stopwatch-widget button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  .stopwatch-widget button:disabled {\r\n    background-color: #ccc;\r\n    color: #999;\r\n    cursor: not-allowed;\r\n  }\r\n  </style>"],"mappings":"AAaE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE,IAAI;MACfC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,MAAMC,YAAW,GAAI,IAAI,CAACH,WAAU,GAAI,IAAI;MAC5C,MAAMI,OAAM,GAAIC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACN,WAAU,GAAI,IAAI,IAAI,EAAE;MACxD,MAAMO,OAAM,GAAIF,IAAI,CAACC,KAAK,CAAC,IAAI,CAACN,WAAU,GAAI,KAAK,IAAI,EAAE;MACzD,MAAMQ,KAAI,GAAIH,IAAI,CAACC,KAAK,CAAC,IAAI,CAACN,WAAU,GAAI,OAAO,CAAC;MAEpD,OAAQ,GAAEQ,KAAM,IAAGD,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGN,OAAO,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGP,YAAY,CAACM,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;IAC7I;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,IAAI,CAAC,IAAI,CAACd,SAAS,EAAE;QACnB,IAAI,CAACA,SAAQ,GAAI,IAAI;QACrB,IAAI,CAACC,SAAQ,GAAIc,IAAI,CAACC,GAAG,CAAC,CAAC;QAE3B,IAAI,CAACC,aAAY,GAAIC,WAAW,CAAC,MAAM;UACrC,IAAI,CAAChB,WAAU,GAAIa,IAAI,CAACC,GAAG,CAAC,IAAI,IAAI,CAACf,SAAS;QAChD,CAAC,EAAE,EAAE,CAAC;MACR;IACF,CAAC;IACDkB,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACnB,SAAS,EAAE;QAClB,IAAI,CAACA,SAAQ,GAAI,KAAK;QACtBoB,aAAa,CAAC,IAAI,CAACH,aAAa,CAAC;MACnC;IACF,CAAC;IACDI,cAAcA,CAAA,EAAG;MACf,IAAI,CAACrB,SAAQ,GAAI,KAAK;MACtBoB,aAAa,CAAC,IAAI,CAACH,aAAa,CAAC;MACjC,IAAI,CAACf,WAAU,GAAI,CAAC;IACtB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}