{"ast":null,"code":"export default {\n  data() {\n    return {\n      latitude: null,\n      longitude: null,\n      inputLatitude: '',\n      inputLongitude: '',\n      foundLocation: null\n    };\n  },\n  mounted() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.getPosition);\n    }\n  },\n  methods: {\n    getPosition(position) {\n      this.latitude = position.coords.latitude;\n      this.longitude = position.coords.longitude;\n    },\n    async fetchLocationDetails() {\n      try {\n        const apiKey = '92591005a7b94008909d59a64b6d2a49';\n        const latitude = this.inputLatitude || this.latitude;\n        const longitude = this.inputLongitude || this.longitude;\n        const apiUrl = `https://api.opencagedata.com/geocode/v1/json?q=${encodeURIComponent(latitude + ',' + longitude)}&key=${apiKey}`;\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        if (data.results && data.results.length > 0) {\n          const location = data.results[0];\n          this.foundLocation = location;\n          console.log('Location:', location);\n          // Lakukan sesuatu dengan data lokasi yang ditemukan\n        }\n      } catch (error) {\n        console.error('Error fetching location data:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","latitude","longitude","inputLatitude","inputLongitude","foundLocation","mounted","navigator","geolocation","getCurrentPosition","getPosition","methods","position","coords","fetchLocationDetails","apiKey","apiUrl","encodeURIComponent","response","fetch","json","results","length","location","console","log","error"],"sources":["C:\\Users\\MSI CORE i3\\widgetfoto\\src\\components\\LocationWidget.vue"],"sourcesContent":["<template>\r\n    <div class=\"location-widget\">\r\n      <h2>Your Location</h2>\r\n      <div v-if=\"latitude && longitude\">\r\n        <p>Latitude: {{ latitude }}</p>\r\n        <p>Longitude: {{ longitude }}</p>\r\n      </div>\r\n      <div v-else>\r\n        <p>Finding your location...</p>\r\n      </div>\r\n  \r\n      <div class=\"location-input\">\r\n        <label for=\"latitude\">Latitude:</label>\r\n        <input type=\"text\" id=\"latitude\" v-model=\"inputLatitude\" />\r\n      </div>\r\n      <div class=\"location-input\">\r\n        <label for=\"longitude\">Longitude:</label>\r\n        <input type=\"text\" id=\"longitude\" v-model=\"inputLongitude\" />\r\n      </div>\r\n  \r\n      <button @click=\"fetchLocationDetails\">Find Location Details</button>\r\n  \r\n      <div v-if=\"foundLocation\">\r\n        <h3>Location Details</h3>\r\n        <p>{{ foundLocation.components.country }}</p>\r\n        <p>{{ foundLocation.components.city }}</p>\r\n        <p>{{ foundLocation.components.street }}</p>\r\n        <p>Postal Code: {{ foundLocation.components.postcode }}</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        latitude: null,\r\n        longitude: null,\r\n        inputLatitude: '',\r\n        inputLongitude: '',\r\n        foundLocation: null,\r\n      };\r\n    },\r\n    mounted() {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(this.getPosition);\r\n      }\r\n    },\r\n    methods: {\r\n      getPosition(position) {\r\n        this.latitude = position.coords.latitude;\r\n        this.longitude = position.coords.longitude;\r\n      },\r\n      async fetchLocationDetails() {\r\n        try {\r\n          const apiKey = '92591005a7b94008909d59a64b6d2a49';\r\n          const latitude = this.inputLatitude || this.latitude;\r\n          const longitude = this.inputLongitude || this.longitude;\r\n          const apiUrl = `https://api.opencagedata.com/geocode/v1/json?q=${encodeURIComponent(\r\n            latitude + ',' + longitude\r\n          )}&key=${apiKey}`;\r\n  \r\n          const response = await fetch(apiUrl);\r\n          const data = await response.json();\r\n  \r\n          if (data.results && data.results.length > 0) {\r\n            const location = data.results[0];\r\n            this.foundLocation = location;\r\n            console.log('Location:', location);\r\n            // Lakukan sesuatu dengan data lokasi yang ditemukan\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching location data:', error);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .location-widget {\r\n    border: 1px solid #ccc;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n    background-color: #f5f5f5;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .location-widget h2 {\r\n    color: #333;\r\n    font-size: 24px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .location-widget p {\r\n    color: #666;\r\n  }\r\n  \r\n  .location-input {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .location-input label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    color: #333;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .location-input input {\r\n    width: 200px;\r\n    padding: 10px;\r\n    margin-right: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .location-input button {\r\n    padding: 10px 20px;\r\n    background-color: #4caf50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .location-input button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  .location-input button:disabled {\r\n    background-color: #ccc;\r\n    color: #999;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  .location-details {\r\n    margin-top: 20px;\r\n    text-align: left;\r\n  }\r\n  \r\n  .location-details h3 {\r\n    margin-bottom: 10px;\r\n    color: #333;\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .location-details p {\r\n    margin: 5px 0;\r\n    color: #666;\r\n  }\r\n  \r\n  .error-message {\r\n    color: red;\r\n    margin-top: 10px;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAiCE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,IAAI;MACfC,aAAa,EAAE,EAAE;MACjBC,cAAc,EAAE,EAAE;MAClBC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAIC,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,IAAI,CAACC,WAAW,CAAC;IAC5D;EACF,CAAC;EACDC,OAAO,EAAE;IACPD,WAAWA,CAACE,QAAQ,EAAE;MACpB,IAAI,CAACX,QAAO,GAAIW,QAAQ,CAACC,MAAM,CAACZ,QAAQ;MACxC,IAAI,CAACC,SAAQ,GAAIU,QAAQ,CAACC,MAAM,CAACX,SAAS;IAC5C,CAAC;IACD,MAAMY,oBAAoBA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAMC,MAAK,GAAI,kCAAkC;QACjD,MAAMd,QAAO,GAAI,IAAI,CAACE,aAAY,IAAK,IAAI,CAACF,QAAQ;QACpD,MAAMC,SAAQ,GAAI,IAAI,CAACE,cAAa,IAAK,IAAI,CAACF,SAAS;QACvD,MAAMc,MAAK,GAAK,kDAAiDC,kBAAkB,CACjFhB,QAAO,GAAI,GAAE,GAAIC,SACnB,CAAE,QAAOa,MAAO,EAAC;QAEjB,MAAMG,QAAO,GAAI,MAAMC,KAAK,CAACH,MAAM,CAAC;QACpC,MAAMhB,IAAG,GAAI,MAAMkB,QAAQ,CAACE,IAAI,CAAC,CAAC;QAElC,IAAIpB,IAAI,CAACqB,OAAM,IAAKrB,IAAI,CAACqB,OAAO,CAACC,MAAK,GAAI,CAAC,EAAE;UAC3C,MAAMC,QAAO,GAAIvB,IAAI,CAACqB,OAAO,CAAC,CAAC,CAAC;UAChC,IAAI,CAAChB,aAAY,GAAIkB,QAAQ;UAC7BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAAC;UAClC;QACF;MACF,EAAE,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}