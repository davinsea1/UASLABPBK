{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e5cc031\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"stopwatch-widget\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Stopwatch\", -1 /* HOISTED */));\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", null, _toDisplayString($options.formatTime), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startStopwatch && $options.startStopwatch(...args)),\n    disabled: $data.isRunning\n  }, \"Start\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.stopStopwatch && $options.stopStopwatch(...args)),\n    disabled: !$data.isRunning\n  }, \"Stop\", 8 /* PROPS */, _hoisted_4), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.resetStopwatch && $options.resetStopwatch(...args))\n  }, \"Reset\")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$options","formatTime","onClick","_cache","args","startStopwatch","disabled","$data","isRunning","_hoisted_3","stopStopwatch","_hoisted_4","resetStopwatch"],"sources":["C:\\Users\\MSI CORE i3\\widgetfoto\\src\\components\\StopwatchWidget.vue"],"sourcesContent":["<template>\r\n    <div class=\"stopwatch-widget\">\r\n      <h2>Stopwatch</h2>\r\n      <p>{{ formatTime }}</p>\r\n      <div>\r\n        <button @click=\"startStopwatch\" :disabled=\"isRunning\">Start</button>\r\n        <button @click=\"stopStopwatch\" :disabled=\"!isRunning\">Stop</button>\r\n        <button @click=\"resetStopwatch\">Reset</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        isRunning: false,\r\n        startTime: null,\r\n        elapsedTime: 0,\r\n      };\r\n    },\r\n    computed: {\r\n      formatTime() {\r\n        const milliseconds = this.elapsedTime % 1000;\r\n        const seconds = Math.floor(this.elapsedTime / 1000) % 60;\r\n        const minutes = Math.floor(this.elapsedTime / 60000) % 60;\r\n        const hours = Math.floor(this.elapsedTime / 3600000);\r\n  \r\n        return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}:${milliseconds.toString().padStart(3, '0')}`;\r\n      },\r\n    },\r\n    methods: {\r\n      startStopwatch() {\r\n        if (!this.isRunning) {\r\n          this.isRunning = true;\r\n          this.startTime = Date.now();\r\n  \r\n          this.timerInterval = setInterval(() => {\r\n            this.elapsedTime = Date.now() - this.startTime;\r\n          }, 10);\r\n        }\r\n      },\r\n      stopStopwatch() {\r\n        if (this.isRunning) {\r\n          this.isRunning = false;\r\n          clearInterval(this.timerInterval);\r\n        }\r\n      },\r\n      resetStopwatch() {\r\n        this.isRunning = false;\r\n        clearInterval(this.timerInterval);\r\n        this.elapsedTime = 0;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .stopwatch-widget {\r\n    border: 1px solid #ccc;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .stopwatch-widget h2 {\r\n    color: #333;\r\n    font-size: 24px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .stopwatch-widget p {\r\n    color: #666;\r\n    font-size: 18px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .stopwatch-widget button {\r\n    padding: 10px 20px;\r\n    background-color: #4caf50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .stopwatch-widget button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  .stopwatch-widget button:disabled {\r\n    background-color: #ccc;\r\n    color: #999;\r\n    cursor: not-allowed;\r\n  }\r\n  </style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAkB;gEAC3BC,mBAAA,CAAkB,YAAd,WAAS;;;;uBADfC,mBAAA,CAQM,OARNC,UAQM,GAPJC,UAAkB,EAClBH,mBAAA,CAAuB,WAAAI,gBAAA,CAAjBC,QAAA,CAAAC,UAAU,kBAChBN,mBAAA,CAIM,cAHJA,mBAAA,CAAoE;IAA3DO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAK,cAAA,IAAAL,QAAA,CAAAK,cAAA,IAAAD,IAAA,CAAc;IAAGE,QAAQ,EAAEC,KAAA,CAAAC;KAAW,OAAK,iBAAAC,UAAA,GAC3Dd,mBAAA,CAAmE;IAA1DO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAU,aAAA,IAAAV,QAAA,CAAAU,aAAA,IAAAN,IAAA,CAAa;IAAGE,QAAQ,GAAGC,KAAA,CAAAC;KAAW,MAAI,iBAAAG,UAAA,GAC1DhB,mBAAA,CAA8C;IAArCO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAY,cAAA,IAAAZ,QAAA,CAAAY,cAAA,IAAAR,IAAA,CAAc;KAAE,OAAK,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}