{"ast":null,"code":"export default {\n  data() {\n    return {\n      board: ['', '', '', '', '', '', '', '', ''],\n      currentPlayer: 'X',\n      isGameEnded: false\n    };\n  },\n  computed: {\n    status() {\n      if (this.isGameEnded) {\n        return 'Game Over!';\n      }\n      return `Player ${this.currentPlayer}'s turn`;\n    }\n  },\n  methods: {\n    handleClick(index) {\n      if (!this.isGameEnded && this.board[index] === '') {\n        this.board[index] = this.currentPlayer;\n        this.checkWinner();\n        this.currentPlayer = this.currentPlayer === 'X' ? 'O' : 'X';\n      }\n    },\n    checkWinner() {\n      const winningCombinations = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n      // Rows\n      [0, 3, 6], [1, 4, 7], [2, 5, 8],\n      // Columns\n      [0, 4, 8], [2, 4, 6] // Diagonals\n      ];\n\n      for (const combination of winningCombinations) {\n        const [a, b, c] = combination;\n        if (this.board[a] && this.board[a] === this.board[b] && this.board[a] === this.board[c]) {\n          this.isGameEnded = true;\n          return;\n        }\n      }\n    },\n    resetGame() {\n      this.board = ['', '', '', '', '', '', '', '', ''];\n      this.currentPlayer = 'X';\n      this.isGameEnded = false;\n    }\n  }\n};","map":{"version":3,"names":["data","board","currentPlayer","isGameEnded","computed","status","methods","handleClick","index","checkWinner","winningCombinations","combination","a","b","c","resetGame"],"sources":["C:\\Users\\MSI CORE i3\\widgetfoto\\src\\components\\TicTacToeWidget.vue"],"sourcesContent":["<template>\r\n    <div class=\"tic-tac-toe-widget\">\r\n      <h2>Tic Tac Toe</h2>\r\n      <div class=\"board\">\r\n        <div v-for=\"(cell, index) in board\" :key=\"index\" @click=\"handleClick(index)\">{{ cell }}</div>\r\n      </div>\r\n      <button @click=\"resetGame\">Reset</button>\r\n      <p>{{ status }}</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        board: ['', '', '', '', '', '', '', '', ''],\r\n        currentPlayer: 'X',\r\n        isGameEnded: false,\r\n      };\r\n    },\r\n    computed: {\r\n      status() {\r\n        if (this.isGameEnded) {\r\n          return 'Game Over!';\r\n        }\r\n        return `Player ${this.currentPlayer}'s turn`;\r\n      },\r\n    },\r\n    methods: {\r\n      handleClick(index) {\r\n        if (!this.isGameEnded && this.board[index] === '') {\r\n          this.board[index] = this.currentPlayer;\r\n          this.checkWinner();\r\n          this.currentPlayer = this.currentPlayer === 'X' ? 'O' : 'X';\r\n        }\r\n      },\r\n      checkWinner() {\r\n        const winningCombinations = [\r\n          [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows\r\n          [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns\r\n          [0, 4, 8], [2, 4, 6], // Diagonals\r\n        ];\r\n  \r\n        for (const combination of winningCombinations) {\r\n          const [a, b, c] = combination;\r\n          if (this.board[a] && this.board[a] === this.board[b] && this.board[a] === this.board[c]) {\r\n            this.isGameEnded = true;\r\n            return;\r\n          }\r\n        }\r\n      },\r\n      resetGame() {\r\n        this.board = ['', '', '', '', '', '', '', '', ''];\r\n        this.currentPlayer = 'X';\r\n        this.isGameEnded = false;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .tic-tac-toe-widget {\r\n    ba\r\n    border: 1px solid #ccc;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .board {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-gap: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .board div {\r\n    border: 1px solid #ccc;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button {\r\n    margin-top: 10px;\r\n  }\r\n  </style>"],"mappings":"AAYE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC3CC,aAAa,EAAE,GAAG;MAClBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACF,WAAW,EAAE;QACpB,OAAO,YAAY;MACrB;MACA,OAAQ,UAAS,IAAI,CAACD,aAAc,SAAQ;IAC9C;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAI,CAAC,IAAI,CAACL,WAAU,IAAK,IAAI,CAACF,KAAK,CAACO,KAAK,MAAM,EAAE,EAAE;QACjD,IAAI,CAACP,KAAK,CAACO,KAAK,IAAI,IAAI,CAACN,aAAa;QACtC,IAAI,CAACO,WAAW,CAAC,CAAC;QAClB,IAAI,CAACP,aAAY,GAAI,IAAI,CAACA,aAAY,KAAM,GAAE,GAAI,GAAE,GAAI,GAAG;MAC7D;IACF,CAAC;IACDO,WAAWA,CAAA,EAAG;MACZ,MAAMC,mBAAkB,GAAI,CAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE;MAAA,CACvB;;MAED,KAAK,MAAMC,WAAU,IAAKD,mBAAmB,EAAE;QAC7C,MAAM,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,IAAIH,WAAW;QAC7B,IAAI,IAAI,CAACV,KAAK,CAACW,CAAC,KAAK,IAAI,CAACX,KAAK,CAACW,CAAC,MAAM,IAAI,CAACX,KAAK,CAACY,CAAC,KAAK,IAAI,CAACZ,KAAK,CAACW,CAAC,MAAM,IAAI,CAACX,KAAK,CAACa,CAAC,CAAC,EAAE;UACvF,IAAI,CAACX,WAAU,GAAI,IAAI;UACvB;QACF;MACF;IACF,CAAC;IACDY,SAASA,CAAA,EAAG;MACV,IAAI,CAACd,KAAI,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACjD,IAAI,CAACC,aAAY,GAAI,GAAG;MACxB,IAAI,CAACC,WAAU,GAAI,KAAK;IAC1B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}