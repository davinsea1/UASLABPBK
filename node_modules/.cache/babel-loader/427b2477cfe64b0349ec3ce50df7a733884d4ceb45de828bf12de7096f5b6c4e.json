{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ac74409\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"location-widget\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Your Location\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Finding your location...\", -1 /* HOISTED */));\nconst _hoisted_6 = [_hoisted_5];\nconst _hoisted_7 = {\n  class: \"location-input\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"latitude\"\n}, \"Latitude:\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"location-input\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"longitude\"\n}, \"Longitude:\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  key: 2\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Location Details\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, $data.latitude && $data.longitude ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, \"Latitude: \" + _toDisplayString($data.latitude), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Longitude: \" + _toDisplayString($data.longitude), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _hoisted_6)), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"latitude\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputLatitude = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.inputLatitude]])]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"longitude\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.inputLongitude = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.inputLongitude]])]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.fetchLocationDetails && $options.fetchLocationDetails(...args))\n  }, \"Find Location Details\"), $data.foundLocation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"p\", null, _toDisplayString($data.foundLocation.components.country), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.foundLocation.components.city), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.foundLocation.components.street), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Postal Code: \" + _toDisplayString($data.foundLocation.components.postcode), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_5","for","_createElementBlock","_hoisted_1","_hoisted_2","$data","latitude","longitude","_hoisted_3","_toDisplayString","_hoisted_4","_hoisted_6","_hoisted_7","_hoisted_8","type","id","inputLatitude","$event","_hoisted_9","_hoisted_10","inputLongitude","onClick","_cache","args","$options","fetchLocationDetails","foundLocation","_hoisted_11","_hoisted_12","components","country","city","street","postcode"],"sources":["C:\\Users\\MSI CORE i3\\widgetfoto\\src\\components\\LocationWidget.vue"],"sourcesContent":["<template>\r\n    <div class=\"location-widget\">\r\n      <h2>Your Location</h2>\r\n      <div v-if=\"latitude && longitude\">\r\n        <p>Latitude: {{ latitude }}</p>\r\n        <p>Longitude: {{ longitude }}</p>\r\n      </div>\r\n      <div v-else>\r\n        <p>Finding your location...</p>\r\n      </div>\r\n  \r\n      <div class=\"location-input\">\r\n        <label for=\"latitude\">Latitude:</label>\r\n        <input type=\"text\" id=\"latitude\" v-model=\"inputLatitude\" />\r\n      </div>\r\n      <div class=\"location-input\">\r\n        <label for=\"longitude\">Longitude:</label>\r\n        <input type=\"text\" id=\"longitude\" v-model=\"inputLongitude\" />\r\n      </div>\r\n  \r\n      <button @click=\"fetchLocationDetails\">Find Location Details</button>\r\n  \r\n      <div v-if=\"foundLocation\">\r\n        <h3>Location Details</h3>\r\n        <p>{{ foundLocation.components.country }}</p>\r\n        <p>{{ foundLocation.components.city }}</p>\r\n        <p>{{ foundLocation.components.street }}</p>\r\n        <p>Postal Code: {{ foundLocation.components.postcode }}</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        latitude: null,\r\n        longitude: null,\r\n        inputLatitude: '',\r\n        inputLongitude: '',\r\n        foundLocation: null,\r\n      };\r\n    },\r\n    mounted() {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(this.getPosition);\r\n      }\r\n    },\r\n    methods: {\r\n      getPosition(position) {\r\n        this.latitude = position.coords.latitude;\r\n        this.longitude = position.coords.longitude;\r\n      },\r\n      async fetchLocationDetails() {\r\n        try {\r\n          const apiKey = '92591005a7b94008909d59a64b6d2a49';\r\n          const latitude = this.inputLatitude || this.latitude;\r\n          const longitude = this.inputLongitude || this.longitude;\r\n          const apiUrl = `https://api.opencagedata.com/geocode/v1/json?q=${encodeURIComponent(\r\n            latitude + ',' + longitude\r\n          )}&key=${apiKey}`;\r\n  \r\n          const response = await fetch(apiUrl);\r\n          const data = await response.json();\r\n  \r\n          if (data.results && data.results.length > 0) {\r\n            const location = data.results[0];\r\n            this.foundLocation = location;\r\n            console.log('Location:', location);\r\n            // Lakukan sesuatu dengan data lokasi yang ditemukan\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching location data:', error);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .location-widget {\r\n    border: 1px solid #ccc;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n    background-color: #f5f5f5;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .location-widget h2 {\r\n    color: #333;\r\n    font-size: 24px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .location-widget p {\r\n    color: #666;\r\n  }\r\n  \r\n  .location-input {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .location-input label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    color: #333;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .location-input input {\r\n    width: 200px;\r\n    padding: 10px;\r\n    margin-right: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .location-input button {\r\n    padding: 10px 20px;\r\n    background-color: #4caf50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .location-input button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  .location-input button:disabled {\r\n    background-color: #ccc;\r\n    color: #999;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  .location-details {\r\n    margin-top: 20px;\r\n    text-align: left;\r\n  }\r\n  \r\n  .location-details h3 {\r\n    margin-bottom: 10px;\r\n    color: #333;\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .location-details p {\r\n    margin: 5px 0;\r\n    color: #666;\r\n  }\r\n  \r\n  .error-message {\r\n    color: red;\r\n    margin-top: 10px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAiB;gEAC1BC,mBAAA,CAAsB,YAAlB,eAAa;;;;;;;gEAMfA,mBAAA,CAA+B,WAA5B,0BAAwB;oBAA3BC,UAA+B,C;;EAG5BF,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAuC;EAAhCE,GAAG,EAAC;AAAU,GAAC,WAAS;;EAG5BH,KAAK,EAAC;AAAgB;iEACzBC,mBAAA,CAAyC;EAAlCE,GAAG,EAAC;AAAW,GAAC,YAAU;;;;iEAOjCF,mBAAA,CAAyB,YAArB,kBAAgB;;;uBAtBxBG,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,UAAsB,EACXC,KAAA,CAAAC,QAAQ,IAAID,KAAA,CAAAE,SAAS,I,cAAhCL,mBAAA,CAGM,OAAAM,UAAA,GAFJT,mBAAA,CAA+B,WAA5B,YAAU,GAAAU,gBAAA,CAAGJ,KAAA,CAAAC,QAAQ,kBACxBP,mBAAA,CAAiC,WAA9B,aAAW,GAAAU,gBAAA,CAAGJ,KAAA,CAAAE,SAAS,iB,oBAE5BL,mBAAA,CAEM,OAAAQ,UAAA,EAAAC,UAAA,IAENZ,mBAAA,CAGM,OAHNa,UAGM,GAFJC,UAAuC,E,gBACvCd,mBAAA,CAA2D;IAApDe,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,UAAU;+DAAUV,KAAA,CAAAW,aAAa,GAAAC,MAAA;iDAAbZ,KAAA,CAAAW,aAAa,E,KAEzDjB,mBAAA,CAGM,OAHNmB,UAGM,GAFJC,WAAyC,E,gBACzCpB,mBAAA,CAA6D;IAAtDe,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,WAAW;+DAAUV,KAAA,CAAAe,cAAc,GAAAH,MAAA;iDAAdZ,KAAA,CAAAe,cAAc,E,KAG3DrB,mBAAA,CAAoE;IAA3DsB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,oBAAA,IAAAD,QAAA,CAAAC,oBAAA,IAAAF,IAAA,CAAoB;KAAE,uBAAqB,GAEhDlB,KAAA,CAAAqB,aAAa,I,cAAxBxB,mBAAA,CAMM,OAAAyB,WAAA,GALJC,WAAyB,EACzB7B,mBAAA,CAA6C,WAAAU,gBAAA,CAAvCJ,KAAA,CAAAqB,aAAa,CAACG,UAAU,CAACC,OAAO,kBACtC/B,mBAAA,CAA0C,WAAAU,gBAAA,CAApCJ,KAAA,CAAAqB,aAAa,CAACG,UAAU,CAACE,IAAI,kBACnChC,mBAAA,CAA4C,WAAAU,gBAAA,CAAtCJ,KAAA,CAAAqB,aAAa,CAACG,UAAU,CAACG,MAAM,kBACrCjC,mBAAA,CAA2D,WAAxD,eAAa,GAAAU,gBAAA,CAAGJ,KAAA,CAAAqB,aAAa,CAACG,UAAU,CAACI,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}