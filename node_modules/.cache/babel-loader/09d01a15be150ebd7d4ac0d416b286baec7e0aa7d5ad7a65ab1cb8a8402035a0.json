{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-415b4bd4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"photo-widget\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($data.title), 1 /* TEXT */), _createElementVNode(\"img\", {\n    src: $data.photoUrl,\n    alt: $data.title\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.getRandomPhoto && $options.getRandomPhoto(...args))\n  }, \"Load New Photo\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","title","src","photoUrl","alt","onClick","_cache","args","$options","getRandomPhoto"],"sources":["C:\\Users\\MSI CORE i3\\widgetfoto\\src\\components\\PhotoWidget.vue"],"sourcesContent":["<template>\r\n    <div class=\"photo-widget\">\r\n      <h2>{{ title }}</h2>\r\n      <img :src=\"photoUrl\" :alt=\"title\" />\r\n      <button @click=\"getRandomPhoto\">Load New Photo</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        title: '',\r\n        photoUrl: '',\r\n      };\r\n    },\r\n    mounted() {\r\n      this.getRandomPhoto();\r\n    },\r\n    methods: {\r\n      async getRandomPhoto() {\r\n        try {\r\n          const apiKey = '38037020-2c48722c03be8437a05b588e6';\r\n          const apiUrl = `https://pixabay.com/api/?key=${apiKey}&q=nature&image_type=photo&orientation=horizontal`;\r\n  \r\n          const response = await fetch(apiUrl);\r\n          const data = await response.json();\r\n  \r\n          const randomIndex = Math.floor(Math.random() * data.hits.length);\r\n          const randomPhoto = data.hits[randomIndex];\r\n  \r\n          this.title = randomPhoto.tags;\r\n          this.photoUrl = randomPhoto.webformatURL;\r\n        } catch (error) {\r\n          console.error('Error fetching random photo:', error);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .photo-widget {\r\n    border: 1px solid #ccc;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  \r\n  .photo-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .photo-container img {\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n  }\r\n  \r\n  .photo-widget button {\r\n    margin-top: 10px;\r\n  }\r\n  </style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAc;;;uBAAzBC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,mBAAA,CAAoB,YAAAC,gBAAA,CAAbC,KAAA,CAAAC,KAAK,kBACZH,mBAAA,CAAoC;IAA9BI,GAAG,EAAEF,KAAA,CAAAG,QAAQ;IAAGC,GAAG,EAAEJ,KAAA,CAAAC;uCAC3BH,mBAAA,CAAuD;IAA9CO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,gBAAc,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}